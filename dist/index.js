var Ae=Object.create;var K=Object.defineProperty;var te=Object.getOwnPropertyDescriptor;var xe=Object.getOwnPropertyNames;var ve=Object.getPrototypeOf,Pe=Object.prototype.hasOwnProperty;var De=(o,e,r,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of xe(e))!Pe.call(o,a)&&a!==r&&K(o,a,{get:()=>e[a],enumerable:!(t=te(e,a))||t.enumerable});return o};var I=(o,e,r)=>(r=o!=null?Ae(ve(o)):{},De(e||!o||!o.__esModule?K(r,"default",{value:o,enumerable:!0}):r,o));var s=(o,e,r,t)=>{for(var a=t>1?void 0:t?te(e,r):e,m=o.length-1,i;m>=0;m--)(i=o[m])&&(a=(t?i(e,r,a):i(a))||a);return t&&a&&K(e,r,a),a};var po=require("reflect-metadata");var Ke=require("reflect-metadata"),se=require("typeorm");var R=require("typeorm");var v=require("typeorm");var d=class{};s([(0,v.CreateDateColumn)()],d.prototype,"createdAt",2),s([(0,v.UpdateDateColumn)()],d.prototype,"updatedAt",2),s([(0,v.DeleteDateColumn)()],d.prototype,"deletedAt",2);var y=class extends d{};s([(0,R.PrimaryGeneratedColumn)("uuid")],y.prototype,"id",2),s([(0,R.Column)()],y.prototype,"firstName",2),s([(0,R.Column)()],y.prototype,"lastName",2),s([(0,R.Column)()],y.prototype,"username",2),s([(0,R.Column)()],y.prototype,"email",2),s([(0,R.Column)()],y.prototype,"password",2),y=s([(0,R.Entity)({name:"users"})],y);var p=require("typeorm");var n=class extends d{};s([(0,p.PrimaryGeneratedColumn)("uuid")],n.prototype,"id",2),s([(0,p.Column)()],n.prototype,"name",2),s([(0,p.Column)({nullable:!0})],n.prototype,"country",2),s([(0,p.Column)({nullable:!0})],n.prototype,"state",2),s([(0,p.Column)({nullable:!0})],n.prototype,"stateCode",2),s([(0,p.Column)({nullable:!0})],n.prototype,"city",2),s([(0,p.Column)({nullable:!0})],n.prototype,"postalCode",2),s([(0,p.Column)({nullable:!0})],n.prototype,"suburb",2),s([(0,p.Column)({nullable:!0})],n.prototype,"street",2),s([(0,p.Column)({nullable:!0})],n.prototype,"houseNumber",2),s([(0,p.Column)({type:"float"})],n.prototype,"lng",2),s([(0,p.Column)({type:"float"})],n.prototype,"lat",2),s([(0,p.Column)({nullable:!0})],n.prototype,"formattedAddress",2),s([(0,p.Column)({nullable:!0})],n.prototype,"openHours",2),n=s([(0,p.Entity)({name:"places"})],n);var f=require("typeorm");var w=require("typeorm");var g=class extends d{};s([(0,w.PrimaryGeneratedColumn)("uuid")],g.prototype,"id",2),s([(0,w.Column)()],g.prototype,"name",2),s([(0,w.Column)({type:"float"})],g.prototype,"lat",2),s([(0,w.Column)({type:"float"})],g.prototype,"lng",2),s([(0,w.OneToMany)(()=>l,e=>e.docking)],g.prototype,"areas",2),g=s([(0,w.Entity)({name:"docking"})],g);var l=class extends d{};s([(0,f.PrimaryGeneratedColumn)("uuid")],l.prototype,"id",2),s([(0,f.Column)()],l.prototype,"name",2),s([(0,f.Column)({type:"geometry",spatialFeatureType:"Polygon",srid:4326})],l.prototype,"polygon",2),s([(0,f.Column)()],l.prototype,"color",2),s([(0,f.ManyToOne)(()=>g,e=>e.areas),(0,f.JoinColumn)()],l.prototype,"docking",2),l=s([(0,f.Entity)({name:"areas"})],l);var E=require("zod"),Ie=E.z.object({JWT_SECRET:E.z.string(),DATABASE_URL:E.z.string()}),P=Ie.parse(process.env);var u=new se.DataSource({url:P.DATABASE_URL,type:"postgres",synchronize:!0,logging:!1,entities:[y,n,l,g],migrations:[],subscribers:[],logger:"advanced-console"});var ee=I(require("express")),he=I(require("cors"));var ce=require("express");var ae=require("bcrypt"),ne=require("jsonwebtoken");var U=class{constructor(e){this.findUserByUsername=e}async call({username:e,password:r}){let t=await this.findUserByUsername.call(e);if(!t)throw new Error("User not found");if(!await(0,ae.compare)(r,t.password))throw new Error("Invalid password");return{token:(0,ne.sign)({user:t},P.JWT_SECRET,{expiresIn:"1d"})}}};var A=class extends Error{constructor(e){super(e),this.name="NotFoundError"}};var C=class{constructor(e){this.dataSource=e}async call(e){try{return await this.dataSource.getRepository(y).findOne({where:{username:e}})}catch(r){throw console.log(r),new A("User not found")}}};var ie=require("bcrypt"),k=class{constructor(e){this.registerUserRepository=e}async call(e){return e.password=await(0,ie.hash)(e.password,10),this.registerUserRepository.call(e)}};var G=class{constructor(e){this.dataSource=e}async call(e){try{return await this.dataSource.getRepository(y).save(e),e}catch(r){throw console.log(r),new Error("Error registering user")}}};var X=(0,ce.Router)();X.post("/login",async(o,e)=>{try{let t=await new U(new C(u)).call(o.body);e.json(t)}catch(r){e.status(400).json({error:r.message})}});X.post("/register",async(o,e)=>{try{let t=await new k(new G(u)).call(o.body);e.json(t)}catch(r){e.status(400).json({error:r.message})}});var le=X;var pe=require("express"),S=require("zod");var Z=I(require("node-fetch"));var T=class{constructor(e,r){this.getPlacesInsidePolygonRepository=e;this.getAreaByIdRepository=r}async getDistanceMatrix(e,r){let t=[r,...e],a=[];for(let m=0;m<t.length;m++){a[m]=[];for(let i=0;i<t.length;i++)if(m!==i){let h=await this.getDistanceBetweenPlaces(t[m],t[i]);a[m][i]=h}else a[m][i]=1/0}return a}async call(e){let r=await this.getAreaByIdRepository.getAreaById(e);if(console.log(JSON.stringify(r.docking)),!r)throw new A("Area not found");if(!r.docking)throw new A("Docking not found");let t=await this.getPlacesInsidePolygonRepository.call(r.polygon),a={lat:r.docking.lat,lng:r.docking.lng},m=await this.getDistanceMatrix(t,a),i=[0],h=Array.from({length:t.length},(c,B)=>B+1);for(;h.length>0;){let c=i[i.length-1],B=h.reduce((b,oe)=>m[c][oe]<m[c][b]?oe:b,h[0]);i.push(B),h=h.filter(b=>b!==B)}let Se=[a,...i.map(c=>t[c-1])].filter(c=>c).map(c=>`${c.lng},${c.lat}`).join(";");return{routes:(await(0,Z.default)(`http://localhost:5000/route/v1/car/${Se}?overview=simplified&geometries=polyline6`).then(c=>c.json()).catch(c=>Error(c))).routes,places:t.map(c=>({id:c.id,name:c.name,position:[c.lat,c.lng]}))}}async getDistanceBetweenPlaces(e,r){return(await(0,Z.default)(`http://localhost:5000/route/v1/car/${e.lng},${e.lat};${r.lng},${r.lat}?overview=full&geometries=geojson`).then(a=>a.json())).routes[0].distance}};var F=class{constructor(e){this.getPlacesInBoundsRepo=e}async execute(e){return(await this.getPlacesInBoundsRepo.call(e)).map(t=>({id:t.id,name:t.name,position:[t.lat,t.lng]}))}};var N=class{constructor(e,r){this.getPlacesInsidePolygonIdRepository=e;this.getAreaByIdRepository=r}async call(e){let r=await this.getAreaByIdRepository.getAreaById(e);if(!r)throw new Error("Polygon not found");return this.getPlacesInsidePolygonIdRepository.call(r.polygon)}};var L=class{constructor(e){this.dataSource=e}async getAreaById(e){return await this.dataSource.getRepository("Area").createQueryBuilder("area").leftJoinAndSelect("area.docking","docking").where("area.id = :id",{id:e}).getOne()}};var M=class{constructor(e){this.dataSource=e}async call(e){return await this.dataSource.getRepository(n).createQueryBuilder("place").where("place.lat < :neLat",{neLat:e.ne.lat}).andWhere("place.lng < :neLng",{neLng:e.ne.lng}).andWhere("place.lat > :swLat",{swLat:e.sw.lat}).andWhere("place.lng > :swLng",{swLng:e.sw.lng}).getMany()}};var j=class{constructor(e){this.dataSource=e}async call(e){let r=e.coordinates[0].map(a=>a.join(" ")).join(",");return await this.dataSource.getRepository(n).createQueryBuilder("place").where(`ST_Contains(
           ST_SetSRID(
             ST_GeomFromText(:polygon, 4326), 
             4326
           ),
           ST_SetSRID(ST_MakePoint(place.lng, place.lat), 4326)
         ) 
         AND place.deletedAt IS NULL`,{polygon:`POLYGON((${r}))`}).getMany()}};var _=(0,pe.Router)(),Le=S.z.object({ne:S.z.string(),sw:S.z.string()});_.get("/",async(o,e)=>{try{let{ne:r,sw:t}=Le.parse(o.query),[a,m]=r.split(","),[i,h]=t.split(","),re=await new F(new M(u)).execute({ne:{lat:parseFloat(a),lng:parseFloat(m)},sw:{lat:parseFloat(i),lng:parseFloat(h)}});e.json(re)}catch(r){e.status(400).json({error:r.message})}});var je=S.z.object({id:S.z.string()});_.get("/inside/:id",async(o,e)=>{try{let{id:r}=je.parse(o.params),t=await new N(new j(u),new L(u)).call(r);e.json(t)}catch(r){e.status(400).json({error:r.message})}});var Be=S.z.object({polygonId:S.z.string()});_.post("/calc",async(o,e)=>{try{let{polygonId:r}=Be.parse(o.body),t=await new T(new j(u),new L(u)).call(r);e.json(t)}catch(r){e.status(400).json({error:r.message})}});var me=_;var ge=require("express");var ue=require("crypto"),ye=I(require("node-fetch")),O=class{async call(e){return{...(await(0,ye.default)(`https://nominatim.openstreetmap.org/search?q=${e}&polygon_geojson=1&format=jsonv2`).then(t=>t.json()))[0].geojson,id:(0,ue.randomUUID)()}}};var q=class{constructor(e){this.saveAreaRepo=e}async call(e){await this.saveAreaRepo.save(e)}};var $=class{constructor(e){this.dataSource=e}async save(e){let r=this.dataSource.getRepository(l);return console.log(JSON.stringify(e)),(await r.createQueryBuilder("areas").insert().values({...e,polygon:()=>`ST_GeomFromText('POLYGON((${e.polygon.map(a=>a.join(" ")).join(",").trim()}))')`}).execute()).raw[0]}};var z=class{constructor(e){this.listAreasRepo=e}async call(){return await this.listAreasRepo.list()}};var J=class{constructor(e){this.dataSource=e}async list(){return(await this.dataSource.getRepository(l).find({order:{name:"ASC"}})).map(a=>({id:a.id,name:a.name,color:a.color,polygon:a.polygon.coordinates[0].map(i=>[i[0],i[1]])}))}};var W=class{constructor(e){this.deleteAreaRepository=e}async call(e){await this.deleteAreaRepository.call(e)}};var Q=class{constructor(e){this.dataSource=e}async call(e){await this.dataSource.getRepository(l).softDelete(e)}};var D=(0,ge.Router)();D.get("/",async(o,e)=>{try{let{query:r}=o.query,t=await new O().call(r);e.json(t)}catch(r){e.status(400).json({error:r.message})}});D.post("/save",async(o,e)=>{try{let r=o.body,t=await new q(new $(u)).call(r);e.json(t)}catch(r){e.status(400).json({error:r.message})}});D.get("/all",async(o,e)=>{try{let r=await new z(new J(u)).call();e.json(r)}catch(r){e.status(400).json({error:r.message})}});D.delete("/:id",async(o,e)=>{try{let{id:r}=o.params,t=await new W(new Q(u)).call(r);e.json(t)}catch(r){e.status(400).json({error:r.message})}});var de=require("express");var Y=class{constructor(e){this.listDockingRepo=e}async call(){return await this.listDockingRepo.list()}};var H=class{constructor(e){this.dataSource=e}async list(){try{return await this.dataSource.getRepository(g).find()}catch(e){throw console.log(e),new Error("Error listing docking")}}};var fe=(0,de.Router)();fe.get("/",async(o,e)=>{try{let r=await new Y(new H(u)).call();e.json(r)}catch(r){e.status(400).json({error:r.message})}});var Re=fe;var we=I(require("jsonwebtoken"));async function V(o,e,r){let t=o.headers.authorization;if(!t){e.status(401).json({message:"Token n\xE3o fornecido"});return}try{let a=t.split(" ")[1];we.default.verify(a,P.JWT_SECRET),r()}catch{e.status(401).json({message:"Token inv\xE1lido"})}}var x=(0,ee.default)();x.use(ee.default.json());x.use((0,he.default)());x.use(le);x.use("/places",V,me);x.use("/polygons",V,D);x.use("/docking",V,Re);async function be(){console.log=o=>process.stdout.write("[INFO] "+o+`
`),console.error=o=>process.stderr.write("[ERROR] "+o+`
`),console.log("Database initialized"),x.listen(3e3,()=>{console.log("Server running on port 3000")})}u.initialize().then(be).catch(o=>console.log(o));
